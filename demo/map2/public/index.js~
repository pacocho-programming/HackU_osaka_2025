import { getDatabase, ref, set, get, onValue } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-database.js";

const db = getDatabase();
const map = L.map('map').setView([35.6895, 139.6917], 13);

// 地図にタイルレイヤーを追加
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  attribution: '&copy; OpenStreetMap contributors'
}).addTo(map);

// ユーザーの現在地を取得
navigator.geolocation.getCurrentPosition((position) => {
  const userLat = position.coords.latitude;
  const userLon = position.coords.longitude;

  // Firebaseに位置を保存
  const userRef = ref(db, 'users/user_' + Date.now());
  set(userRef, { latitude: userLat, longitude: userLon });

  // マーカーを追加
  L.marker([userLat, userLon]).addTo(map)
    .bindPopup("あなたの位置").openPopup();
});

// Firebaseから全ユーザーの位置を取得
onValue(ref(db, 'users'), (snapshot) => {
  snapshot.forEach((childSnapshot) => {
    const data = childSnapshot.val();
    L.marker([data.latitude, data.longitude]).addTo(map)
      .bindPopup("他のユーザーの位置");
  });
});

// OSRM API を使って最短経路を計算
async function calculateRoute(startLat, startLon, endLat, endLon) {
  const osrmUrl = `http://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=full&geometries=geojson`;
  
  try {
    const response = await fetch(osrmUrl);
    const data = await response.json();
    const route = data.routes[0].geometry;

    L.geoJSON(route, {
      style: { color: "blue", weight: 5 }
    }).addTo(map);
  } catch (error) {
    console.error("OSRM API エラー:", error);
  }
}

// 位置データ取得後、最短経路を描画
onValue(ref(db, 'users'), (snapshot) => {
  const locations = [];
  snapshot.forEach((childSnapshot) => {
    const data = childSnapshot.val();
    locations.push([data.latitude, data.longitude]);
  });

  if (locations.length >= 2) {
    calculateRoute(locations[0][0], locations[0][1], locations[1][0], locations[1][1]);
  }
});
